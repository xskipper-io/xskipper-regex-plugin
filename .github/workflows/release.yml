# Copyright 2021 IBM Corp.
# SPDX-License-Identifier: Apache-2.0

name: "Release"

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'The release version to be used'
        required: false
      next-version:
        description: 'The next version to be used (make sure to use SNAPSHOT)'
        required: false

jobs:
  release:
    if: github.repository == 'xskipper-io/xskipper-regex-plugin'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Xskipper repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CI_TOKEN }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64
      - name: Install Python packages (Python 3.7)
        run: |
          python3.7 -m pip install pyspark>=3.0.0
      - name: Run Python tests
        run: python3.7 run-tests.py
      - if: |
          github.event.inputs.release-version != '' &&
          github.event.inputs.next-version != ''
        name: Release
        env:
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PW: ${{ secrets.NEXUS_PW }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          GIT_REF: ${{ matrix.branch }}
        run: |
          echo $PGP_SECRET | base64 --decode | gpg --batch --import
          git clean -f
          git config --global user.email "xskipperci@gmail.com"
          git config --global user.name "Xskipper CI"
          sbt 'release release-version ${{ github.event.inputs.release-version }} next-version ${{ github.event.inputs.next-version }}'
          git push
      - if: |
          github.event.inputs.release-version == '' &&
          github.event.inputs.next-version == ''
        name: Release
        env:
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PW: ${{ secrets.NEXUS_PW }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          GIT_REF: ${{ matrix.branch }}
        run: |
          echo $PGP_SECRET | base64 --decode | gpg --batch --import
          git clean -f
          git config --global user.email "xskipperci@gmail.com"
          git config --global user.name "Xskipper CI"
          sbt 'release with-defaults'
          git push
      - name: Draft Release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
